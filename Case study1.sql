CREATE DATABASE CASESTUDY1 
USE CASESTUDY1

CREATE TABLE FactTable (
    Date DATE,
    ProductID INT,
    Profit DECIMAL(10, 2),
    Sales DECIMAL(10, 2),
    Margin DECIMAL(10, 2),
    COGS DECIMAL(10, 2),
    TotalExpenses DECIMAL(10, 2),
    Marketing DECIMAL(10, 2),
    Inventory INT,
    BudgetProfit DECIMAL(10, 2),
    BudgetCOGS DECIMAL(10, 2),
    BudgetMargin DECIMAL(10, 2),
    BudgetSales DECIMAL(10, 2),
    AreaCode INT
)

BULK INSERT Facttable
FROM 'C:\Case Study1/fact.csv'
WITH (
    FIELDTERMINATOR = ',',  
    ROWTERMINATOR = '\n',
	rows_per_batch =10000,
    FIRSTROW = 2,
	tablock
)

CREATE TABLE ProductTable (
    ProductType VARCHAR(50),
    Product VARCHAR(50),
    ProductID INT,
    Type VARCHAR(50)
)
INSERT INTO ProductTable (ProductID, ProductType, Product, Type)
VALUES
    (1, 'Coffee', 'Amaretto', 'Regular'),
    (2, 'Coffee', 'Columbian', 'Regular'),
    (3, 'Coffee', 'Decaf Irish Cream', 'Decaf'),
    (4, 'Espresso', 'Caffe Latte', 'Regular'),
    (5, 'Espresso', 'Caffe Mocha', 'Regular'),
    (6, 'Espresso', 'Decaf Espresso', 'Decaf'),
    (7, 'Espresso', 'Regular Espresso', 'Regular'),
    (8, 'Herbal Tea', 'Chamomile', 'Decaf'),
    (9, 'Herbal Tea', 'Lemon', 'Decaf'),
    (10, 'Herbal Tea', 'Mint', 'Decaf'),
    (11, 'Tea', 'Darjeeling', 'Regular'),
    (12, 'Tea', 'Earl Grey', 'Regular'),
    (13, 'Tea', 'Green Tea', 'Regular')

	CREATE TABLE LocationTable (
    AreaCode INT,
    State VARCHAR(50),
    Market VARCHAR(50),
    MarketSize VARCHAR(50)
)
BULK INSERT LocationTable
FROM 'C:\Case Study1\location.csv'
WITH (
    FIELDTERMINATOR = ',',  
    ROWTERMINATOR = '\n',   
    FIRSTROW = 2            
)

1.Display the number of states present in the LocationTable.
SELECT COUNT(DISTINCT State) AS NumberOfStates
FROM LocationTable
2. How many products are of regular type?
SELECT COUNT(*) AS RegularProductCount
FROM ProductTable
WHERE Type = 'Regular'
3. How much spending has been done on marketing of product ID 1?
select * from locationtable
select * from producttable
select * from facttable
SELECT SUM(marketing) AS TotalSpending
FROM factTable
WHERE ProductID = 1
4. What is the minimum sales of a product?
SELECT MIN(Sales) AS MinSales
FROM factTable
5. Display the max Cost of Good Sold (COGS).
SELECT MAX(COGS) AS MaxCOGS
FROM FactTable
6. Display the details of the product where product type is coffee.
SELECT *
FROM ProductTable
WHERE [ProductType] = 'Coffee'

select * from locationtable
select * from producttable
select * from facttable
7. Display the details where total expenses are greater than 40.
SELECT *
FROM FactTable
WHERE TotalExpenses > 40
8. What is the average sales in area code 719?
SELECT AVG(Sales) AS AverageSales
FROM FactTable
WHERE AreaCode = 719
9. Find out the total profit generated by Colorado state.
SELECT SUM(Profit) AS TotalProfit
FROM FactTable, LocationTable
WHERE State = 'Colorado'

select * from locationtable
select * from producttable
select * from facttable

10. Display the average inventory for each product ID. 
SELECT ProductID, AVG(Inventory) AS AverageInventory
FROM facttable
GROUP BY ProductID
11. Display state in a sequential order in a Location Table. 
SELECT State
FROM LocationTable
ORDER BY State
12. Display the average budget of the Product where the average budget
margin should be greater than 100. 
SELECT ProductID, AVG(Budgetmargin) AS AverageBudget
FROM factTable
GROUP BY ProductID
HAVING AVG(BudgetMargin) > 100

select * from locationtable
select * from producttable
select * from facttable

13. What is the total sales done on date 2010-01-01?
SELECT SUM(Sales) AS TotalSales
FROM FactTable
WHERE Date = '2010-01-01'

select * from facttable
select * from producttable
select * from locationtable
14. Display the average total expense of each product ID on an individual date.
SELECT ProductID, Date, AVG(TotalExpenses) AS AverageTotalExpense
FROM factTable
GROUP BY ProductID, Date
15. Display the table with the following attributes such as date, productID, product_type, product, sales, profit, state, area_code.
SELECT f.Date, f.ProductID, p.ProductType, p.Product, f.Sales, f.Profit, l.State, l.AreaCode
FROM  facttable f
JOIN ProductTable p ON f.ProductID = p.ProductID
JOIN LocationTable l ON f.AreaCode = l.AreaCode
16. Display the rank without any gap to show the sales wise rank.
SELECT
    Date,
    ProductID,
    Sales,
    DENSE_RANK() OVER (ORDER BY Sales DESC) AS SalesRank
FROM facttable

select * from facttable
select * from producttable
select * from locationtable
17. Find the state wise profit and sales.
SELECT
State,
SUM(Profit) AS TotalProfit,
SUM(Sales) AS TotalSales
FROM
facttable, locationtable
GROUP BY
State
select * from facttable
select * from producttable
select * from locationtable
18. Find the state wise profit and sales along with the productname. 
SELECT
    l.State,
    p.Product,
    SUM(f.Profit) AS TotalProfit,
    SUM(f.Sales) AS TotalSales
FROM
    Facttable f
JOIN
    ProductTable p ON f.ProductID = p.ProductID
JOIN
    LocationTable l ON f.AreaCode = l.AreaCode
GROUP BY
    l.State, p.Product
  
select * from facttable
select * from producttable
select * from locationtable
19. If there is an increase in sales of 5%, calculate the increasedsales. 
SELECT
    Sales,
    Sales * 1.05 AS IncreasedSales
FROM
    Facttable
20. Find the maximum profit along with the product ID and producttype.
SELECT
    p.ProductID,
    p.ProductType,
    MAX(f.Profit) AS MaximumProfit
FROM
    facttable f
JOIN
    ProductTable p ON f.ProductID = p.ProductID
GROUP BY
    p.ProductID, p.ProductType
select * from facttable
select * from producttable
select * from locationtable
21. Create a stored procedure to fetch the result according to the product type
from Product Table. 
CREATE PROCEDURE GetProductsType
@ProductType VARCHAR(50)
AS
BEGIN
SET NOCOUNT ON
SELECT *
FROM ProductTable
WHERE ProductType = @ProductType
END
EXEC GetProductsType 'Coffee'
22. Write a query by creating a condition in which if the total expenses is less than
60 then it is a profit or else loss. 
SELECT*,
CASE
WHEN TotalExpenses < 60 THEN 'Profit'
ELSE 'Loss'
END AS ProfitOrLoss
FROM facttable
    
	select * from facttable
23. Give the total weekly sales value with the date and product ID details. Use
roll-up to pull the data in hierarchical order.
SELECT 
    Date,
    ProductID,
    SUM(Sales) AS WeeklySales
FROM 
    Facttable
GROUP BY 
    ROLLUP (Date, ProductID)
24. Apply union and intersection operator on the tables which consist of
attribute area code.
select * from locationtable
select * from facttable
select * from producttable
SELECT areacode FROM Facttable
UNION
SELECT areacode FROM locationtable

SELECT areacode FROM Facttable
INTERSECT
SELECT areacode FROM locationtable
25. Create a user-defined function for the product table to fetch a particular
product type based upon the user’s preference. 
CREATE FUNCTION GetProductsByType
(
@ProductType VARCHAR(50)
)
RETURNS TABLE
AS
RETURN
(
SELECT *
FROM ProductTable
WHERE ProductType = @ProductType
)
SELECT *
FROM dbo.GetProductsByType('Coffee')

26. Change the product type from coffee to tea where product ID is 1 and undo
it. 
BEGIN TRANSACTION
UPDATE ProductTable
SET ProductType = 'Tea'
WHERE ProductID = 1
SELECT * FROM ProductTable WHERE ProductID = 1
ROLLBACK TRANSACTION
27. Display the date, product ID and sales where total expenses are
between 100 to 200. 
select * from locationtable
select * from facttable
select * from producttable
SELECT Date, ProductID, Sales
FROM FactTable
WHERE Date IN (SELECT Date FROM FactTable WHERE TotalExpenses BETWEEN 100 AND 200)

28. Delete the records in the Product Table for regular type. 
DELETE FROM ProductTable
WHERE ProductType = 'Regular'

29. Display the ASCII value of the fifth character from the columnProduct.
SELECT ASCII(SUBSTRING(Product, 5, 1)) AS ASCII_Value
FROM ProductTable